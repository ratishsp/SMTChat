{
  "author": {
    "name": "ALI EL BROUDI",
    "email": "ali.elb@gmail.com",
    "url": "https://github.com/aliel/"
  },
  "name": "express-dispatcher",
  "description": "Dispatcher for expressjs",
  "version": "0.0.0",
  "homepage": "https://github.com/aliel/express-dispatcher",
  "repository": {
    "type": "git",
    "url": "git://github.com/aliel/express-dispatcher.git"
  },
  "main": "lib/express-dispatcher.js",
  "scripts": {
    "test": "jasmine-node spec/"
  },
  "engines": {
    "node": "~0.6.4"
  },
  "dependencies": {
    "express": ">=2.0"
  },
  "devDependencies": {
    "jasmine-node": ""
  },
  "readme": "express-dispatcher [![Build Status](https://api.travis-ci.org/aliel/express-dispatcher.png)](https://travis-ci.org/aliel/express-dispatcher)\n====================\n\nDispatcher for expressjs : Under development !\n\n## Installation\n\n```js\n$ npm install -g express-dispatcher\n```\n\n## Usage exemple\n```js\n// controllers/routes.js\nexports.routes = {\n    app: {\n        'index' : {\n            path: '/',\n            controller: 'index',\n            action: 'index',\n            view: 'index',\n            method: 'GET',\n            isSecure: false\n        },\n        'about' : {\n            path: '/about',\n            controller: 'about',\n            action: 'index',\n            method: 'POST',\n            isSecure: false\n        }\n    },\n    routes: {\n        'blog' : 'blog/routes',\n        'user' : 'user/routes'\n    }\n};\n\n// for \"/\" VERB, load \"controller/index\" from \"./controllers/main/index\"\n// and execute \"index\" action\n\n// code of \"controllers/index.js\"\nvar main = exports._controller = {\n    index : function(req, res, next) {\n        console.log('view is => ' + main.getView(req));\n        res.render(main.getView(req), { title: 'My title' });\n    }\n    //...\n};\n```\n\n\n## Let's starting with a simple configuration of nodejs\n\n```js\nvar express = require('express')\n  , http = require('http')\n  , path = require('path')\n  , dispatcher = require('express-dispatcher').dispatcher;\n  \nvar app = express();\n\napp.configure(function(){\n  app.engine('.hjs', require('hogan-express'));\n  app.set('port', process.env.PORT || 3000);\n  app.set('views', __dirname + '/views');\n  app.set('view engine', 'hjs');\n  app.use(express.logger('dev'));\n  app.use(express.bodyParser());\n  app.use(express.methodOverride());\n  app.use(express.cookieParser('a45Er#f5J'));\n  app.use(express.session());\n  app.use(app.router);\n\n  app.use(express.static(path.join(__dirname, 'public')));\n});\n\napp.configure('development', function(){\n  app.use(express.errorHandler());\n});\n\n// This dispatcher\ndispatcher.init({app: app, path: __dirname + '/controllers/'});\n\nvar server = http.createServer(app);\n\nserver.listen(app.get('port'), function(){\n  console.log(\"Express server listening on port \" + app.get('port'));\n});\n```\n\n## Our MVC architecture\n\n```sh\napp.js\ncontrollers\ncontrollers/routes.js\ncontrollers/main/index.js\nmodels\nviews\nviews/index.js\npublic\n```\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/aliel/express-dispatcher/issues"
  },
  "_id": "express-dispatcher@0.0.0",
  "_from": "express-dispatcher@"
}
